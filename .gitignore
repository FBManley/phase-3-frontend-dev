# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

# IGNORE NOTES
# import React, { useState, useEffect} from 'react'
import {useParams} from 'react-router-dom'
import Task from './Task'

const User = () => {
    // render user and bunch of tasks (able to edit/delete tasks)
    const [owner, setOwner] = useState({
        tasks: []
    })
    const [taskFormFlag, setDogFormFlag] = useState(false)
    
    const params = useParams()

    useEffect(() => {
        fetch (`http://localhost:9292/users/${params.id}`)
        .then(res => res.json())
        .then(data => {
            console.log(data)
        }) 
        // fetch user and tasks that should be on this page
    }, [])
  return (
    <div>
        <h2>I am a user</h2>
    </div>
  )
}

export default User;
import React from 'react'
import { Link } from 'react-router-dom'

const UserLink = ({user}) => {
  return (
    <div>
        <Link to={`/users/${user.id}`}>
            <h2>{user.name}</h2>
        </Link>
    </div>
  )
}
export default UserLink;
import React, { useState, useEffect} from 'react'
import UserLink from './components/UserLink';

const Users = () => {
    const [users, setUsers] = useState([])
    // const [userFormFlag, setUserFormFlag] = useState(false) // button that lets me add another user. index view that allows expansion to a form - gives create and read
    useEffect(() => {
    fetch("http://localhost:9292")
    .then((r) => r.json())
    .then((data) => {
        console.log(data)
        setUsers(data)
    });
    }, [])
    const usersList = users.map( user => <UserLink key={user.id} user={user}/>)
    return (
        <div>
            <ul>
                {usersList}
            </ul>
        </div>
    )
}
export default Users;
////////
    // const [artists, setArtists] = useState([])
    // useEffect(() => {
    //     fetch("http://localhost:9292/artists")
    //         .then(r => r.json())
    //         .then((artist) => setArtists(artist))
    // }, []);

    // const artistList = artists.map((artist) => (
    //     <Artist artist={artist} key={artist.id}/>
    // ))
   
    // const handleArtistSubmit = (art) => {
    //     setArtists(art)
    // }
//  <ArtistForm  handleArtistSubmit={handleArtistSubmit}/>
//     {artistList}